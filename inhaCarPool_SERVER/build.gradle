plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //spring
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'
    //스웨거
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    //QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // Q클래스 생성을 위한 annotationProcessor 설정
    // QClass란 엔티티 클래스 속성과 구조를 설명해주는 메타데이터 => Type Safe 하게 쿼리 조건 설정 가능
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //dotenv
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //firebase
    implementation group: 'com.google.firebase', name: 'firebase-admin', version: '9.1.1'
    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'

}

// Querydsl 설정부
def generatedDir = 'src/main/generated'
clean {
    delete file(generatedDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(generatedDir)
}
